<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="trainerMapper">

	<resultMap id="trainerResultSet" type="Trainer" >
		<id property="trainerNo" column="TRAINER_NO"/>
		
		<!-- DB 일반 컬럼에 해당하는 필드와 컬럼을 작성 -->
		<result property="memberId" column="MEMBER_ID" />
		<result property="memberPwd" column="MEMBER_PWD" />
		<result property="memberName" column="MEMBER_NM" />
		<result property="memberPhone" column="MEMBER_PHONE" />
		<result property="memberEmail" column="MEMBER_EMAIL" />
		<result property="trainerCareer" column="TRAINER_CAREER" />
		<result property="trainerMcnt" column="TRAINER_M_CNT" />
		<result property="memberEnrollDate" column="MEMBER_ENROLL_DATE" />
		<result property="memberStatus" column="MEMBER_STATUS" />
		<result property="trainerPrice" column="TRAINER_PRICE" />
		<result property="trainerSNS" column="TRAINER_SNS" />	
		<result property="trainerAward" column="TRAINER_AWARD" />	
		<result property="trainerComment" column="TRAINER_COMMENT" />
		<result property="reviewGrade" column="REVIEW_GRADE" />
			<result property="trainerGrade" column="TRAINER_GRADE" />	
	</resultMap>
	
	 <resultMap type="TrainerAttachment" id="trainerAttachmentResultSet">
        <id property="fileNo" column="FILE_NO"/>
        <result property="parentTrainerNo" column="PARENT_TRAINER_NO"/>
        <result property="fileOriginName" column="FILE_ORIGIN_NAME"/>
        <result property="fileChangeName" column="FILE_CHANGE_NAME"/>
        <result property="filePath" column="FILE_PATH"/>
        <result property="fileLevel" column="FILE_LEVEL"/>
    </resultMap>
    
    
	 <resultMap type="ClassStatus" id="classStatusResultSet">
        <result property="memberNo" column="MEMBER_NO"/>
        <result property="trainerNo" column="TRAINER_NO"/>
        <result property="classCnt" column="CLASS_CNT"/>
    </resultMap>
    
    
	 <resultMap type="TrainerSchedule" id="TrainerScheduleResultSet">
        <result property="scheduleTime" column="SCHEDULE_TIME"/>
        <result property="trainerNo" column="TRAINER_NO"/>
        <result property="scheduleStatus" column="SCHEDULE_STATUS"/>
    </resultMap>
    
      <resultMap type="Review" id="reviewResultSet">
	
		<id property="reviewNo" column="REVIEW_NO"/>
		<result property="reviewContent" column="REVIEW_CONTENT"/>
		<result property="reviewRating" column="REVIEW_RATING"/>
		<result property="reviewCreateDate" column="REVIEW_CREATE_DT"/>
		<result property="memberId" column="MEMBER_ID"/>
		
	</resultMap>
	
	
	<resultMap type="PT" id="PTResultSet">
    	<result property="memberNo" column="MEMBER_NO"/>
    	<result property="trainerNo" column="TRAINER_NO"/>
        <result property="scheduleTime" column="SCHEDULE_TIME"/>
        <result property="ptStatus" column="PT_STATUS"/>
    </resultMap>
	
	<select id="selectList" resultMap="trainerResultSet">
		SELECT * FROM TRAINER JOIN MEMBER ON(MEMBER_NO=TRAINER_NO)WHERE MEMBER_STATUS='Y'
	</select>
	
	
	<select id="selectTrainer" parameterType="_int" resultMap="trainerResultSet">
	SELECT * FROM TRAINER JOIN MEMBER ON(MEMBER_NO=TRAINER_NO)WHERE MEMBER_STATUS='Y' AND TRAINER_NO=#{trainerNo}
	</select>


	 <select id="selectNextNo" resultType="_int">
        SELECT SEQ_MNO.NEXTVAL FROM DUAL
    </select>
	

	<insert id="insertTrainer" parameterType="Trainer">
		INSERT ALL INTO MEMBER VALUES(#{trainerNo}, #{memberId}, #{memberPwd},
		 #{memberName},#{memberPhone},#{memberEmail}, DEFAULT, DEFAULT, 'T')
         INTO TRAINER VALUES(#{trainerNo},#{trainerCareer},DEFAULT,#{trainerPrice},
         #{trainerSNS},#{trainerComment},#{trainerAward},DEFAULT)
SELECT * FROM DUAL
	</insert>
	

	<!-- 파일 정보 삽입 -->
	<insert id="insertAttachment" parameterType="TrainerAttachment">
		INSERT INTO TRAINER_ATTACHMENT VALUES(SEQ_TFNO.NEXTVAL,#{parentTrainerNo}, #{fileOriginName}, #{fileChangeName}, #{filePath}, #{fileLevel})
	</insert>
	

     <select id="selectFiles" parameterType="_int" resultMap="trainerAttachmentResultSet">
     	SELECT * FROM TRAINER_ATTACHMENT WHERE PARENT_TRAINER_NO=#{trainerNo} ORDER BY FILE_LEVEL
     </select>

     <delete id="deleteAttachment" parameterType="_int">
     	DELETE FROM TRAINER_ATTACHMENT
     	WHERE PARENT_TRAINER_NO = #{trainerNo}
     </delete>
	
	  
	<select id="selectThumbnailList" parameterType="list" resultMap="trainerAttachmentResultSet">
		SELECT * FROM TRAINER_ATTACHMENT
		WHERE FILE_LEVEL = 0
		AND PARENT_TRAINER_NO IN
		<foreach collection="list" index="i" item="trainer"
			open="(" close=")" separator=",">
		#{trainer.trainerNo}
		</foreach>
	</select>
	
	<!-- 거래번호 생성 -->
	<select id="createMerchantUid" resultType="_int">
		SELECT SEQ_PAY.NEXTVAL FROM DUAL
	</select>
	
	
	<!-- 결제하기 -->
	<insert id="insertOrder" parameterType="map">
		INSERT INTO PAYMENT VALUES(#{payment.merchantUid}, #{payment.classNm}, #{payment.amount}, SYSDATE, #{payment.memberNo}, #{payment.trainerNo}, null)
	</insert>
	 
	
	<!-- 트레이너 가격, 이름 조회 -->
  	<select id="selectPrice" parameterType="_int" resultMap="trainerResultSet">
  		SELECT TRAINER_PRICE, MEMBER_NM FROM TRAINER JOIN MEMBER ON(TRAINER.TRAINER_NO=MEMBER.MEMBER_NO) WHERE TRAINER.TRAINER_NO=#{trainerNo}
  	</select>
  	
  	<!-- 수강권 삽입 -->
  	<insert id="insertCoupon" parameterType="Payment">
  		INSERT INTO CLASS_STATUS VALUES(#{memberNo}, #{trainerNo}, #{classNm})
  		
  	</insert>
  	
  	<!-- 거래고유번호 삽입 -->
	<update id="updateImpUid" parameterType="Payment">
  		UPDATE PAYMENT SET IMP_UID = #{impUid} WHERE MERCHANT_UID=#{merchantUid}
  	</update>
  	
  	<select id="selectClassStatus" parameterType="_int" resultMap="classStatusResultSet" >
  	SELECT * FROM CLASS_STATUS WHERE MEMBER_NO=#{memberNo} AND CLASS_CNT!=0
  	</select>
  	
  	<!-- 회원수증가 -->
  	<update id="updateCnt" parameterType="_int">
  		UPDATE TRAINER SET
		TRAINER_M_CNT = TRAINER_M_CNT+1
		WHERE TRAINER_NO = #{trainerNo}
  	</update>
  	
  	<insert id="insertSchedule" parameterType="TrainerSchedule">
  	INSERT INTO TRAINER_SCHEDULE VALUES(#{scheduleTime},#{trainerNo},DEFAULT)
  	</insert>
  	
  	<select id="selectSchedule" parameterType="_int" resultMap="TrainerScheduleResultSet">
  	SELECT * FROM TRAINER_SCHEDULE WHERE TRAINER_NO=#{trainerNo}
  	</select>
  	
  	<insert id="insertResulvation" parameterType="PT">
  	INSERT INTO PT VALUES(#{scheduleTime},#{trainerNo},#{memberNo},DEFAULT)
  	</insert>
  	
  	<update id="updateClassCnt"  parameterType="_int" >
  	UPDATE CLASS_STATUS SET CLASS_CNT=CLASS_CNT-1 WHERE MEMBER_NO=#{memberNo}
  	</update>
  	
  	<update id="updateTrainerSchedule"  parameterType="PT" >
  	UPDATE TRAINER_SCHEDULE SET SCHEDULE_STATUS='N' WHERE TRAINER_NO=#{trainerNo} AND SCHEDULE_TIME=#{scheduleTime}
  	</update>
  	
  	<select id="compareSchedule" parameterType="TrainerSchedule" resultType="_int">
  	SELECT COUNT(*) FROM TRAINER_SCHEDULE WHERE SCHEDULE_TIME=#{scheduleTime} AND TRAINER_NO=#{trainerNo}
  	</select>
  	
  	<!-- 리뷰 조회 -->
  	<select id="selectReviews" parameterType="_int" resultMap="reviewResultSet">
  			SELECT REVIEW_NO, REVIEW_CONTENT, REVIEW_RATING, REVIEW_CREATE_DT, MEMBER_ID FROM REVIEW JOIN MEMBER ON (REVIEW.REVIEW_WRITER=MEMBER.MEMBER_NO)
  		 WHERE TRAINER_NO=#{trainerNo} AND REVIEW_STATUS='Y' ORDER BY REVIEW_NO DESC
  	</select>
  	

  	<!-- 트레이너 리뷰 평점 조회  -->
  	<select id="selectReviewGrade" parameterType="int" resultMap="trainerResultSet">
  		SELECT ROUND(AVG(REVIEW_RATING)) AS REVIEW_GRADE FROM REVIEW WHERE TRAINER_NO = #{trainerNo} AND REVIEW_STATUS = 'Y' GROUP BY TRAINER_NO
  	</select>
  	
  	<select id="selectTrainerNo" resultType="_int">
  		SELECT TRAINER_NO FROM REVIEW GROUP BY TRAINER_NO
  	</select>

  	<delete id="scheduleCancel"  parameterType="TrainerSchedule">
  	DELETE FROM TRAINER_SCHEDULE WHERE SCHEDULE_TIME=#{scheduleTime} AND SCHEDULE_STATUS='Y' AND TRAINER_NO=#{trainerNo}
  	</delete>
  	

	<select id="selectSchedule2" resultMap="PTResultSet">
		SELECT * FROM PT
	</select>

  	<delete id="deleteMerchantUid" parameterType="_int">
  		DELETE FROM PAYMENT WHERE MERCHANT_UID=#{merchantUid}
  	</delete>

	<update id="updateGrade" parameterType="map">
		UPDATE TRAINER SET TRAINER_GRADE = #{trainerGrade} WHERE TRAINER_NO = #{trainerNo}
	</update>


	<select id="bestThumbnailList" resultMap="trainerAttachmentResultSet">
	SELECT FILE_NO,PARENT_TRAINER_NO,FILE_ORIGIN_NAME,FILE_CHANGE_NAME,FILE_PATH,FILE_LEVEL
FROM TRAINER_ATTACHMENT JOIN TRAINER ON(TRAINER_NO=PARENT_TRAINER_NO)
WHERE PARENT_TRAINER_NO IN
(SELECT * FROM(SELECT TRAINER_NO FROM TRAINER ORDER BY TRAINER_GRADE DESC)
 <![CDATA[
WHERE ROWNUM<=3 AND FILE_LEVEL=0  )ORDER BY TRAINER_GRADE DESC
]]>
	
	</select>
	<select id="bestList" resultMap="trainerResultSet">
	SELECT * FROM TRAINER  JOIN MEMBER ON(MEMBER_NO=TRAINER_NO)WHERE MEMBER_STATUS='Y' AND TRAINER_NO IN
(SELECT * FROM(SELECT TRAINER_NO FROM TRAINER ORDER BY TRAINER_GRADE DESC)
<![CDATA[
	WHERE ROWNUM<=3 )  ORDER BY TRAINER_GRADE DESC
	]]>

	</select>
  
</mapper>
